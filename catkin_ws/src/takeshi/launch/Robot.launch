<launch>
  <arg name="no_rviz" default="false" />
  <arg name="robot_name" default="$(optenv ROBOT_NAME hsrb)" />
  <!-- ロボット定義をupload -->
  <include file="$(find hsrb_gazebo_bringup)/launch/include/upload_urdf_$(arg robot_name).xml" />

  <node name="hsrb_mock_hardware" pkg="hsrb_mock_hardware" type="hsrb_mock_hardware_main" output="screen" />
  <node unless="false" name="map_server" pkg="map_server" type="map_server" output="screen"
				args="$(find takeshi)/maps/bio/biorobotica1.yaml"/>

  <node name="controller_spawner"
        pkg="controller_manager"
        type="spawner"
        respawn="false"
        output="screen"
        ns="hsrb"
        args="--namespace=/hsrb
              joint_state_controller
              omni_base_controller
              head_trajectory_controller
              arm_trajectory_controller
              gripper_controller">
  </node>

  <rosparam ns="/hsrb" command="load" file="$(find hsrb_rviz_simulator)/params/mock_controller_config.yaml"/>
  <rosparam ns="/hsrb" command="load" file="$(find hsrb_rviz_simulator)/params/hsrb_hw_config.yaml" />

  <node name="xtion_link_to_rgb_frame" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 /head_rgbd_sensor_link /head_rgbd_sensor_rgb_frame 100" />
  <node name="xtion_link_to_depth_frame" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 /head_rgbd_sensor_link /head_rgbd_sensor_depth_frame 100" />


  <node name="base_footprint_to_base_link" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 /base_footprint /base_link 100" />
  <node name="floor_to_odom" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 map odom 10" />

  <arg name="topic_lists" default="{'wheel_odom': 'wheel_odom'}"/>
  <node name="odometry_switcher" pkg="tmc_odometry_switcher" type="odometry_switcher_node" ns="hsrb">
    <remap from="switched_odom" to="odom"/>
    <rosparam param="odom_topics" subst_value="True">$(arg topic_lists)</rosparam>
    <param name="initial_odom" value="wheel_odom"/>
    <param name="odom_frame" value="odom"/>
    <param name="odom_child_frame" value="base_footprint"/>
  </node>

  <node name="move_base_sim" pkg="tmc_rviz_simulator" type="move_base_sim" args=" odom base_footprint">
    <remap from="command_velocity" to="hsrb/command_velocity" />
  </node>

  <node name="joint_state_pub" pkg="joint_state_publisher" type="joint_state_publisher">
    <remap from="/joint_states" to="/hsrb/robot_state/joint_states" />
    <param name="publish_default_velocities" value="true" />
    <param name="publish_default_efforts" value="true" />
    <param name="rate" value="100" />
  </node>
  <rosparam>
    source_list:
    - /hsrb/joint_states
  </rosparam>
  <node name="robot_state_pub" pkg="robot_state_publisher" type="robot_state_publisher">
    <remap from="/joint_states" to="/hsrb/robot_state/joint_states" />
    <param name="publish_frequency" value="100.0" />
  </node>

  <include file="$(find hsrb_manipulation_launch)/launch/planner.launch" />
  <include file="$(find hsrb_impedance_control)/launch/impedance_control_node.launch" ns="hsrb" />

  <!-- rviz -->
  <group unless="$(arg no_rviz)">
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find hsrb_rviz_simulator)/params/display_config.rviz"/>
  </group>

  <param name="robot_tf_name" value="base_footprint" />
  <node name="base_rviz_converter" pkg="tmc_base_visualizer" type="base_rviz_wrapper" >
    <remap from="/odometry" to="odom" />
  </node>
  <include file="$(find hsrb_trajectory_filter)/launch/trajectory_filter.launch" />
  <include file="$(find hsrb_trajectory_filter)/launch/hsrb_timeopt_filter.launch" />
  <!-- wholebody timeopt filter -->
  <include file="$(find hsrb_timeopt_ros)/launch/hsrb_timeopt_filter.launch" />

  <!-- 環境サーバーを動かす -->
  <node name="collision_environment" pkg="tmc_collision_environment" type="collision_environment">
    <param name="object_life_time" value="60.0"/>
  </node>
	<group ns="hardware">
		<node name="arm" pkg="arm" type="arm_node" output="screen"/>
		<node name="head" pkg="head" type="head_node" output="screen"/>
  	</group>

	<group ns="hri">
	    	<node name="takeshi_gui" pkg="takeshi_gui" type="takeshi_gui_node" output="screen"/>
	</group>
	<group ns="path_planning">
		<node name="simple_move" pkg="simple_move" type="simple_move_node" output="screen" args="--move_head"/>
		<node name="path_calculator" pkg="path_calculator" type="path_calculator_node" output="screen">
		<param name="calculate_diagonal_paths" value="false"/>
		</node>
	</group>

	<group ns="obs_avoid">
		<node name="mvn_pln" pkg="mvn_pln" type="mvn_pln_node" output="screen">
		<param name="move_lateral" value="false"/>
		<param name="max_attempts" value="25"/>
		</node>
	</group><!---->
	
</launch>
